type PaletteName = 'color' | 'mono';

type Palette = {
	tortilla: string;
	greens: string;
	cheese: string;
	meat: string;
	line: string;
};

const PALETTES = {
	color: {
		tortilla: '#ecdba7',
		greens: '#5ebd3f',
		cheese: '#f8e899',
		meat: '#a93643',
		line: '#333',
	},
	mono: {
		tortilla: '#fff',
		greens: '#fff',
		cheese: '#fff',
		meat: '#fff',
		line: '#333',
	},
};

export const TORTILLAS = {
	base: (p: Palette) => (
		<path
			fill={p.tortilla}
			stroke={p.line}
			strokeWidth="7.5"
			d="M534.221 380.594a165.132 165.132 0 0 0 4.56-38.489c0-104.301-97.48-188.981-217.548-188.981-120.069 0-217.549 84.68-217.549 188.981 0 12.931 1.528 25.829 4.56 38.489h425.977Z"
		/>
	),
} as const;

export const EYES = {
	base: (p: Palette) => (
		<>
			<path
				fill="none"
				stroke={p.line}
				strokeWidth="8"
				d="M221.864 202.1c4.636-2.956 8.466-6.555 12.43-10.123.289-.26-1.55-.061-1.163-.09.387-.028.776.036 1.163.054"
			/>
			<path
				fill="none"
				stroke={p.line}
				strokeWidth="8"
				d="M371.033 178.321c.984 2.88 2.763 3.38 5.413 4.709 1.305.654 2.892 1.387 2.887 1.48"
			/>
			<path
				fill={p.line}
				d="M253.988 191.841c-1.03-.297-11.924 19.099-11.233 38.427.77 21.528 9.489 37.786 14.323 40.355 3.322 1.765 15.432-12.732 17.128-32.165a50.691 50.691 0 0 0-.376-12.09c-3.387-22.129-17.613-32.659-19.842-34.527ZM356.421 185.218c1.033-.397 14.161 17.486 15.335 36.494 1.309 21.171-6.094 37.995-10.828 41.009-3.254 2.071-17.157-10.887-20.803-29.752a47.447 47.447 0 0 1-.793-11.884c1.331-22.029 14.973-33.808 17.089-35.867Z"
			/>
		</>
	),
	small: (p: Palette) => (
		<>
			<circle fill={p.line} cx="260" cy="230" r="8" />
			<circle fill={p.line} cx="355" cy="230" r="8" />
		</>
	),
	cross: (p: Palette) => (
		<>
			<path
				fill="none"
				stroke={p.line}
				strokeWidth="8"
				d="M234.11 254.27c8.764-11.346 24.174-34.231 24.011-34.117"
			/>
			<path
				fill="none"
				stroke={p.line}
				strokeWidth="8"
				d="M230.983 221.188c6.809 4.861 9.829 7.28 15.133 12.054 1.591 1.431 13.267 11.437 13.81 11.998M233.451 201.401c6.212-1.133 9.395-.736 14.446-.736 1.208 0 9.264-.386 10.221.48.039.036-.378.112 0 .121M341.321 206.295c4.523-1.065 10.372-1.726 17.261-2.109 1.987-.111 7.606-.317 12.324.063.719.058-.722 0 0 0M348.13 227.515c1.926 2.125 10.224 8.31 12.636 9.809 3.885 2.416 16.53 11.99 16.797 12.11"
			/>
			<path
				fill="none"
				stroke={p.line}
				strokeWidth="8"
				d="M351.605 257.88c.925-2.088 12.018-16.418 13.144-17.557 1.288-1.304 8.465-12.062 10.248-14.251"
			/>
		</>
	),
	shock: (p: Palette) => (
		<>
			<path
				transform="translate(0,5)"
				fill="none"
				stroke={p.line}
				strokeWidth="8"
				d="M253.057 6.311M230.983 191.43c5.667-7.761 9.848-11.278 15.13-12.745 7.572-2.103 15.568 4.4 15.568 4.231 0-.182-.071-.187 0 0M373.944 172.586c11.641-3.093 17.22.461 19.473 1.894 6.07 3.858 7.094 9.446 7.599 11.227.085.3.173-.257.018.015"
			/>
			<path
				transform="translate(0,5)"
				fill={p.line}
				stroke="none"
				d="M255.066 200.943c-10.375.78-19.564 7.21-17.607 23.92 1.052 8.98 4.062 22.27 22.144 22.14 11.947-.08 14.602-9.7 16.374-18.33.624-3.04.624-9.32-1.856-15.25-1.361-3.25-7.731-13.34-19.055-12.48ZM375.993 206.173c-5.728-.45-20.695-2.07-23.084 18.71-.59 5.13-.247 15.77 9.129 20.81 6.469 3.48 15.07-.58 20.741-4.84 3.061-2.3 11.987-9.54 3.551-27.48-.582-1.24-4.117-6.72-10.337-7.2Z"
			/>
		</>
	),
} as const;

export const NOSES = {
	base: (p: Palette) => (
		<circle fill={p.line} cx="308.975" cy="275.768" r="8" />
	),
} as const;

export const MOUTHES = {
	smile: (p: Palette) => (
		<path
			fill="none"
			stroke={p.line}
			strokeWidth="8"
			d="M285.983 304.231c-.75 2.326-1.399 5.373-1.413 5.661-.137 2.851.068 22.995 21.345 21.347 20.068-1.555 22.293-14.025 22.054-23.505-.065-2.594-.456-4.338-.48-4.397-.041-.097-.255.01-.115-.074"
		/>
	),
	squiggle: (p: Palette) => (
		<path
			fill="none"
			stroke={p.line}
			strokeWidth="8"
			d="M253.057 333.139c-1.071.047 6.097-16.164 15.477-16.666 14.957-.8 19.872 11.178 29.826 8.567 13.256-3.478 10.998-14.949 24.56-13.819 9.614.801 11.186 6.862 18.401 6.753 8.195-.124 12.892-10.444 25.494-9.953"
		/>
	),
	shock: (p: Palette) => (
		<path
			transform="translate(0,15)"
			fill={p.line}
			stroke="none"
			d="M315.004 290.933c-2.624-.77-11.243-3.81-25.378 8.02-5.02 4.2-8.905 13.18-6.638 23.32 2.579 11.54 18.368 21.72 26.255 22.09 20.095.95 24.222-18.3 24.449-19.54 2.732-14.94-1.836-20.03-2.366-20.93-2.845-4.82-8.126-10.56-16.322-12.96Z"
		/>
	),
} as const;

export const FILLINGS = {
	base: (p: Palette) => (
		<>
			<path
				fill={p.greens}
				stroke={p.line}
				strokeWidth="2.5"
				d="M301.185 162.053c2.953-11.001 12.202-29.035 34.554-56.885 3.84-4.785 7.345-7.417 11.282-3.742 3.543 3.307 7.622 12.881 13.756 14.616 6.961 1.97 13.045-5.337 19.022-2.281 23.417 11.971 24.386 64.295 24.248 64.359-.218.101-103.102-16.089-102.862-16.067ZM450.396 187.017c.083-1.746 8.3-8.171 16.436-12.981 14.039-8.3 24.537-4.273 28.651-2.264 9.204 4.494 12.952 8.591 15.614 15.91 4.471 12.294-1.559 18.613 3.583 26.415 5.134 7.788 23.157 3.489 32.84 15.327 6.699 8.191.997 13.45-.072 18.238-3.109 13.916 2.087 9.426 5.555 20.317 1.93 6.062-.393 10.858-3.06 12.963-7.56 5.965-27.461 12.894-28.447 13.831-.541.514-71.134-108.113-71.1-107.756Z"
			/>
			<path
				fill={p.cheese}
				stroke={p.line}
				strokeWidth="2.5"
				d="M531.669 374.903c1.447 1.261 24.48 2.9 28.374-3.456 2.967-4.841-3.881-10.149-.841-15.604 2.304-4.135 13.924-3.96 12.924-10.145-.757-4.685-6.98-4.606-9.485-5.469-2.522-.869-9.85-.294-11.334-8.611-1.937-10.863 1.914-20.49 1.971-25.288.055-4.569-1.68-7.736-4.014-9.72-8.01-6.809-29.873-9.183-29.873-9.469 0-.554 12.278 88.316 12.278 87.762ZM210.416 190.629c.245-2.042-1.422-12.296-.688-21.934.188-2.459 2.504-14.664 3.573-18.118 1.107-3.577 5.805-13.014 6.642-14.237 3.639-5.323 8.073-9.652 13.201-13.517 1.37-1.031 8.506-6.154 14.352-9.544 12.75-7.394 26.951-11.075 32.573-12.149 9.134-1.745 18.984-1.814 24.74-.259 5.348 1.444 10.509 4.28 15.275 7.012 1.733.994 7.502 5.714 12.001 11.337 5.592 6.989 17.468 24.687 20.48 31.367 1.326 2.943 4.155 11.295 4.373 12.324.008.039-146.645 27.675-146.522 27.718Z"
			/>
			<path
				fill={p.greens}
				stroke={p.line}
				strokeWidth="2.5"
				d="M191.373 207.038c.305.246 94.656-51.799 94.404-52.284-1.008-1.939-9.526-12.513-12.987-16.178-1.49-1.578-5.121-6.194-12.986-6.726-7.829-.529-11.166 2.813-18.714 4.952-9.879 2.801-14.002-2.22-17.298-3.538-4.094-1.638-8.371-3.683-12.811-2.088-.798.286-3.619 2.421-4.055 5.746-1.175 8.949-1.531 17.892-1.879 20.095-.747 4.736-3.695 9.125-8.14 11.041-3.429 1.478-7.262 2.442-10.913 2.365-1.677-.035-10.924-1.747-13.93-2.707-4.445-1.418-8.238.755-8.88 1.663-1.492 2.114-3.532 5.551-2.977 9.96 1.099 8.728 8.056 15.117 16.425 17.628 3.9 1.171 13.496 9.063 14.741 10.071Z"
			/>
			<path
				fill={p.greens}
				stroke={p.line}
				strokeWidth="2.5"
				d="M198.777 199.618c-1.799-4.419-11.967-18.652-14.596-21.997-2.178-2.77-7.159-9.233-12.812-12.018-8.658-4.267-21.655-8.92-35.561-4.402-6.314 2.051-9.652 3.753-13.381 9.184-5.865 8.54-6.287 23.036-6.463 26.088-.591 10.269-3.916 14.376-5.172 15.668-7.642 7.858-18.932 10.186-20.906 10.99-5.408 2.201-12.162 6.705-14.176 12.451-1.272 3.629-1.431 6.044-1.286 9.744.15 3.85 1.705 12.259 6.795 18.277 9.333 11.035 15.231 13.802 18.912 16.082 4.934 3.056 20.791 15.923 20.912 15.699 4.276-7.912 77.46-96.379 77.734-95.766Z"
			/>
			<path
				fill={p.meat}
				stroke={p.line}
				strokeWidth="2.5"
				d="M131.433 248.791c.714.638-24.815 120.237-26.277 120.246-4.442.026-11.612-1.207-15.701-3.073-4.541-2.073-9.315-4.122-13.798-6.292-2.117-1.024-13.294-7.341-16.364-11.55-4.043-5.541-4.26-11.658-3.973-13.609.42-2.863 1.442-7.018 2.795-9.507 2.24-4.119 6.423-5.076 9.329-9.885 2.07-3.427 2.07-4.084 2.616-6.005.506-1.783.664-4.596.659-5.521-.028-4.712-5.737-14.368-6.185-19.049-.314-3.286-.514-6.549 3.579-9.208 5.833-3.79 10.636.228 16.386.143 4.666-.069 9.7-1.152 12.093-4.174 2.449-3.094.936-7.284 3.468-14.554 1.581-4.54 2.97-6.903 13.445-8.812 2.827-.516 5.769-.063 8.617.213 2.121.205 7.736-.771 9.311.637ZM343.613 164.039c.966-3.243 36.419-67.21 98.982-36.734 75.016 36.541 33.292 95.426 33.199 95.264-.06-.103-132.294-58.807-132.181-58.53Z"
			/>
		</>
	),
} as const;

export const GLASSES = {
	square: (p: Palette) => (
		<>
			<path
				fill="none"
				stroke={p.line}
				strokeWidth="6"
				d="M222.893 207.439c1.292 8.532 1.865 17.672 2.288 22.039.661 6.831-.5 21.754.047 22.247.384.347 16.599-2.361 22.942-2.361 8.172 0 13.718.365 21.836.885 2.383.152 12.742-.339 12.859-.544.308-.543-2.749-11.569-3.564-26.098-.232-4.123-1.047-17.635-1.907-18.157-.642-.389-17.312.491-29.993 1.62-3.726.332-24.211.639-24.508.385-.473-.406.606-.155 0-.016Z"
			/>
			<path
				fill="none"
				stroke={p.line}
				strokeWidth="6"
				d="M173.136 205.357c2.109.563 19.222 12.651 29.089 17.149 10.268 4.68 21.887 10.538 21.986 10.581M280.229 228.556c12.163-7.301 30.199-8.111 43.752-4.837 3.315.801 10.633 4.816 10.782 4.837M334.764 207.07c1.283 6.151.959 14.106.891 20.403-.059 5.461.301 16.632 2.244 20.997.175.394 6.402 1.229 12.859.751 9.064-.672 16.312-.835 21.21-1.265 9.869-.868 19.755-.946 21.131-1.151.214-.032-1.619-5.874-2.641-12.415-.707-4.523-2.042-10.625-2.512-15.643-.603-6.443-.535-10.008-.695-10.154-.342-.309-15.986-.118-24.791-.032-4.409.044-27.817-1.344-27.696-1.491ZM391.314 229.478c6.49-6.657 23.518-22.507 34.593-29.931 7.284-4.882 17.425-12.18 17.412-12.19"
			/>
		</>
	),
} as const;

type Props = {
	width?: number;
	height?: number;
	palette?: PaletteName;
	tortilla?: keyof typeof TORTILLAS;
	eyes?: keyof typeof EYES;
	nose?: keyof typeof NOSES;
	mouth?: keyof typeof MOUTHES;
	filling?: keyof typeof FILLINGS;
	glasses?: keyof typeof GLASSES;
};

export function Taco({
	width,
	height,
	palette = 'color',
	tortilla = 'base',
	eyes = 'base',
	nose = 'base',
	mouth = 'smile',
	filling = 'base',
	glasses,
}: Props) {
	const colors = PALETTES[palette];
	return (
		<svg
			fillRule="evenodd"
			strokeLinecap="round"
			strokeLinejoin="round"
			clipRule="evenodd"
			viewBox="0 0 620 400"
			width={width}
			height={height}
			aria-hidden="true"
		>
			{FILLINGS[filling]?.(colors)}
			{TORTILLAS[tortilla]?.(colors)}
			{EYES[eyes]?.(colors)}
			{NOSES[nose]?.(colors)}
			{MOUTHES[mouth]?.(colors)}
			{glasses && GLASSES[glasses]?.(colors)}
		</svg>
	);
}
